name: CI/CD - React + Spring Boot

on:
  push:
    branches:
      - main

jobs:

  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          cd email-frontend-project
          npm ci
          npm run build

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: email-frontend-project/dist


  
  backend-build:
    runs-on: ubuntu-latest
    needs: frontend-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: "22"
          distribution: "temurin"
          cache: maven

      - name: Build Spring Boot backend
        run: |
          cd email-writer-kt
          mvn clean package -DskipTests
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_API_SECRET: ${{ secrets.GEMINI_API_SECRET }}
          GEMINI_BASE_URL: ${{ secrets.GEMINI_BASE_URL }}

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: email-writer-kt/target/*.jar


 
  deploy:
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-build]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: ./email-writer-kt/target

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./email-frontend-project/dist

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          IMAGE_NAME=karantaragi26/karantaragi
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:${{ github.sha }} .

      - name: Push Docker image
        run: |
          IMAGE_NAME=karantaragi26/karantaragi
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}
